{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Byte Shop\\\\Downloads\\\\myApp-reactjs-master\\\\src\\\\components\\\\CartWidget\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport CartContext from '../../context/CartContext';\nimport './Cart.css';\nimport CartItem from '../CartItem/CartItem';\nimport { addDoc, collection, getDocs, Timestamp, docs, doc, query, where, documentId, WriteBatch, writeBatch } from 'firebase/firestore';\nimport { db } from '../../services/firebase/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const {\n    getQuantity,\n    cart,\n    clearCart,\n    getTotal\n  } = useContext(CartContext);\n  const total = getTotal();\n  const quantity = getQuantity();\n\n  const crearOrden = async () => {\n    const infoComprador = {\n      buyer: {\n        name: 'Regina',\n        phone: '11223344',\n        email: 'asdasdasd'\n      },\n      items: cart,\n      total,\n      date: Timestamp.fromDate(new Date())\n    };\n    const ident = cart.map(prod => prod.id);\n    const productsRef = collection(db, 'products');\n    const productosFirestore = await getDocs(query(productsRef, where(documentId(), 'in', ident)));\n    const {\n      docs\n    } = productosFirestore;\n    const sinStock = [];\n    const batch = writeBatch(db);\n    docs.forEach(doc => {\n      const docData = doc.data();\n      const stockActualizado = docData.stock;\n      const productosAgregados = cart.find(prod => prod.id === doc.id);\n      const cantidadProductos = productosAgregados === null || productosAgregados === void 0 ? void 0 : productosAgregados.quantity;\n\n      if (stockActualizado >= cantidadProductos) {\n        batch.update(doc.ref, {\n          stock: stockActualizado - cantidadProductos\n        });\n      } else {\n        sinStock.push({\n          id: doc.id,\n          ...docData\n        });\n      }\n    });\n\n    if (sinStock.length === 0) {\n      const ordenRef = collection(db, 'ordenes');\n    } // addDoc(collection(db, 'orden'), infoComprador).then(response =>{\n    //     console.log(response)\n    // })\n\n  };\n\n  if (quantity <= 0) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"noProducts\",\n      children: \"No hay productos en el carrito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"TuCarrito\",\n      children: \"Tus productos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), cart.map(p => /*#__PURE__*/_jsxDEV(CartItem, { ...p\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 28\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"TotalPrecio\",\n      children: [\"Total: $\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => clearCart(),\n      className: \"Button\",\n      children: \"Limpiar carrito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: crearOrden,\n      className: \"Button\",\n      children: \"Crear orden de compra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"5+AY+upxr56eVN+uDNO6Y92Th48=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["useContext","CartContext","CartItem","addDoc","collection","getDocs","Timestamp","docs","doc","query","where","documentId","WriteBatch","writeBatch","db","Cart","getQuantity","cart","clearCart","getTotal","total","quantity","crearOrden","infoComprador","buyer","name","phone","email","items","date","fromDate","Date","ident","map","prod","id","productsRef","productosFirestore","sinStock","batch","forEach","docData","data","stockActualizado","stock","productosAgregados","find","cantidadProductos","update","ref","push","length","ordenRef","p"],"sources":["C:/Users/Byte Shop/Downloads/myApp-reactjs-master/src/components/CartWidget/Cart.js"],"sourcesContent":["import { useContext } from 'react'\nimport CartContext from '../../context/CartContext'\nimport './Cart.css'\nimport CartItem from '../CartItem/CartItem'\nimport { addDoc, collection, getDocs, Timestamp,docs, doc, query, where, documentId, WriteBatch, writeBatch } from 'firebase/firestore'\nimport { db } from '../../services/firebase/index'\n\nconst Cart = () =>{\n    const {getQuantity, cart, clearCart, getTotal} = useContext(CartContext)\n    \n    const total = getTotal()\n\n    const quantity = getQuantity()\n\n    const crearOrden = async () =>{\n        const infoComprador = {\n            buyer:{\n                name:'Regina',\n                phone:'11223344',\n                email:'asdasdasd'\n            },\n            items:cart,\n            total,\n            date: Timestamp.fromDate(new Date())\n        }\n\n        const ident = cart.map(prod => prod.id)\n\n        const productsRef = collection(db, 'products')\n\n        const productosFirestore = await getDocs(query(productsRef, where(documentId(), 'in', ident)))\n        const {docs} = productosFirestore\n        const sinStock = []\n        const batch = writeBatch(db)\n\n        docs.forEach(doc => {\n            const docData = doc.data()\n            const stockActualizado = docData.stock\n            const productosAgregados = cart.find(prod => prod.id === doc.id)\n            const cantidadProductos = productosAgregados?.quantity\n\n            if(stockActualizado >= cantidadProductos){\n                batch.update(doc.ref, {stock: stockActualizado - cantidadProductos})\n            }else{\n                sinStock.push({id: doc.id, ...docData})\n            }\n        })\n\n        if(sinStock.length === 0){\n            const ordenRef = collection(db, 'ordenes')\n        }\n\n        // addDoc(collection(db, 'orden'), infoComprador).then(response =>{\n        //     console.log(response)\n        // })\n    }\n\n    if(quantity <= 0) {\n        return (\n            <h1 className='noProducts'>No hay productos en el carrito</h1>\n        )\n    }\n\n    return(\n        <div className='cart'>\n            <h3 className='TuCarrito'>Tus productos</h3>\n            { cart.map(p=> <CartItem key ={p.id} {...p}/>) }\n            <p className='TotalPrecio'>Total: ${total}</p>\n            <button onClick={() => clearCart()} className=\"Button\">Limpiar carrito</button>\n            <button onClick={crearOrden} className=\"Button\">Crear orden de compra</button>\n        </div>\n    )\n}\n\nexport default Cart"],"mappings":"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"},"metadata":{},"sourceType":"module"}